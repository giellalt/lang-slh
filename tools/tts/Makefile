# Makefile.in generated by automake 1.16.5 from Makefile.am.
# tools/tts/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



####### Intermediate target file names: ########

# *.gt.* designates the tagset being used.
# At the end of the makefile, there is support for automatic compilation of
# other tagsets, given that the proper tagset relabeling files are defined,
# and that the target files are defined as part of the 'all' target.
#
# Filenames are built as follows:
# basictype-application-tagset-normativity[-dialect].fsttype
#
# 'application' is not specified for the regular/default morphological
# analysis/generation.
#
# Examples:
# analyser-oahpa-gt-desc.hfst
# generator-apertium-apertium-norm_single.hfst
# analyser-gt-desc.xfst
#
# Full details regarding transducer filenames can be found at:
#
# https://giellalt.uit.no/infra/infraremake/TransducerNamesInTheNewInfra.html

#### Tailored silent output text: ####

#### HFST tools
# Tools not yet covered by this file:
#
# hfst-determinize
# hfst-fst2strings
# hfst-info
# hfst-minus
# hfst-multiply
# hfst-pair-test
# hfst-pmatch
# hfst-push-weights
# hfst-remove-epsilons
# hfst-shuffle
# hfst-subtract
# hfst-summarize
# hfst-tokenize


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/giella-slh
pkgincludedir = $(includedir)/giella-slh
pkglibdir = $(libdir)/giella-slh
pkglibexecdir = $(libexecdir)/giella-slh
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-apple-darwin23.4.0
host_triplet = aarch64-apple-darwin23.4.0
subdir = tools/tts
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_python_module.m4 \
	$(top_srcdir)/m4/giella-config-files.m4 \
	$(top_srcdir)/m4/giella-macros.m4 $(top_srcdir)/m4/hfst.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = pipespec.xml
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(voikkosharedir)"
DATA = $(noinst_DATA) $(voikkoshare_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/pipespec.xml.in \
	$(top_srcdir)/../giella-core/am-shared/hfst-format-include.am \
	$(top_srcdir)/../giella-core/am-shared/silent_build-include.am \
	$(top_srcdir)/../giella-core/am-shared/tools-tts-dir-include.am \
	$(top_srcdir)/../giella-core/am-shared/vislcg3-include.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/missing' aclocal-1.16
ALT_ORTHS = 
ALT_WSS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AREAS = 
AUTOCONF = ${SHELL} '/Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/missing' automake-1.16
AWK = gawk
BC = /usr/bin/bc
CG3_CFLAGS = -I/usr/local/include/
CG3_LIBS = -L/usr/local/lib -lcg3
CGFLOOKUP = /usr/local/bin/cgflookup
CG_MWESPLIT = /usr/local/bin/cg-mwesplit
CG_RELABEL = /usr/local/bin/cg-relabel
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
CYGWINJAVAPATH = echo
DEFAULT_ANALYSERS = yes
DEFAULT_CUSTOM_FSTS = yes
DEFAULT_FOMA = no
DEFAULT_GENERATORS = yes
DEFAULT_HFST = yes
DEFAULT_HFST_BACKEND = foma
DEFAULT_HYPERMIN = no
DEFAULT_ORTH = 
DEFAULT_REVERCI = yes
DEFAULT_SPELLER_MINIMISATION = no
DEFAULT_WS = Latn
DEFAULT_XFST = no
DEFS = -DPACKAGE_NAME=\"Giella\ slh\" -DPACKAGE_TARNAME=\"giella-slh\" -DPACKAGE_VERSION=\"0.1.0\" -DPACKAGE_STRING=\"Giella\ slh\ 0.1.0\" -DPACKAGE_BUGREPORT=\"feedback@divvun.no\" -DPACKAGE_URL=\"http://divvun.no\" -DPACKAGE=\"giella-slh\" -DVERSION=\"0.1.0\"
DIALECTS = 
DIFFTOOL = /usr/bin/opendiff
DIVVUN_ACCURACY = 
DIVVUN_CHECKER = /usr/local/bin/divvun-checker
DIVVUN_VALIDATE_SUGGEST = /usr/local/bin/divvun-validate-suggest
ECHO_C = \c
ECHO_N = 
ECHO_T = 
ETAGS = etags
FLOOKUP = /usr/local/bin/flookup
FOMA = /usr/local/bin/foma
FORREST = 
GAWK = /opt/homebrew/bin/gawk
GIELLA_CORE = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/./../giella-core
GIELLA_CORE_VERSION = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/./../giella-core/scripts/gt-version.sh
GLANG = slh
GLANG2 = slh
GLANGUAGE = Southern Puget Sound Salish
GRAMCHECKVERSION = 0.1.0
GTCORE = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/./../giella-core
GTCORESH = /Users/jackrueter/Dropbox/Github/giellalt/giella-core/scripts/gt-core.sh
GTLANG = slh
GTLANG2 = slh
GTLANGUAGE = Southern Puget Sound Salish
GZIP = /usr/bin/gzip
HFST_COMPOSE = /usr/local/bin/hfst-compose
HFST_COMPOSE_INTERSECT = /usr/local/bin/hfst-compose-intersect
HFST_CONCATENATE = /usr/local/bin/hfst-concatenate
HFST_CONJUNCT = /usr/local/bin/hfst-conjunct
HFST_DETERMINIZE = /usr/local/bin/hfst-determinize
HFST_DISJUNCT = /usr/local/bin/hfst-disjunct
HFST_FOMA = false
HFST_FORMAT_NAME = foma
HFST_FST2FST = /usr/local/bin/hfst-fst2fst
HFST_FST2STRINGS = /usr/local/bin/hfst-fst2strings
HFST_FST2TXT = /usr/local/bin/hfst-fst2txt
HFST_INFO = /usr/local/bin/hfst-info
HFST_INTERSECT = /usr/local/bin/hfst-intersect
HFST_INVERT = /usr/local/bin/hfst-invert
HFST_LEXC = /usr/local/bin/hfst-lexc
HFST_LOOKUP = /usr/local/bin/hfst-lookup
HFST_MINIMIZE = /usr/local/bin/hfst-minimize
HFST_MINIMIZE_SPELLER = /usr/local/bin/hfst-remove-epsilons $(HFST_FLAGS) $(MORE_VERBOSITY) 
HFST_MINUS = /usr/local/bin/hfst-minus
HFST_MULTIPLY = /usr/local/bin/hfst-multiply
HFST_NAME = /usr/local/bin/hfst-name
HFST_OPTIMIZED_LOOKUP = /usr/local/bin/hfst-optimized-lookup
HFST_OSPELL = /usr/local/bin/hfst-ospell
HFST_PAIR_TEST = /usr/local/bin/hfst-pair-test
HFST_PMATCH2FST = /usr/local/bin/hfst-pmatch2fst
HFST_PROC = /usr/local/bin/hfst-proc
HFST_PROJECT = /usr/local/bin/hfst-project
HFST_PRUNE_ALPHABET = /usr/local/bin/hfst-prune-alphabet
HFST_PUSH_WEIGHTS = /usr/local/bin/hfst-push-weights
HFST_REGEXP2FST = /usr/local/bin/hfst-regexp2fst
HFST_REMOVE_EPSILONS = /usr/local/bin/hfst-remove-epsilons
HFST_REPEAT = /usr/local/bin/hfst-repeat
HFST_REVERSE = /usr/local/bin/hfst-reverse
HFST_REWEIGHT = /usr/local/bin/hfst-reweight
HFST_SPLIT = /usr/local/bin/hfst-split
HFST_STRINGS2FST = /usr/local/bin/hfst-strings2fst
HFST_SUBSTITUTE = /usr/local/bin/hfst-substitute
HFST_SUBTRACT = /usr/local/bin/hfst-subtract
HFST_SUMMARIZE = /usr/local/bin/hfst-summarize
HFST_TOKENISE = /usr/local/bin/hfst-tokenize
HFST_TWOLC = /usr/local/bin/hfst-twolc
HFST_TXT2FST = /usr/local/bin/hfst-txt2fst
HFST_XFST = /usr/local/bin/hfst-xfst
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JV = /usr/bin/java
LEXC = false
LEXREF_IN_XFSCRIPT = 
LIBOBJS = 
LIBS = 
LOOKUP = false
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/missing' makeinfo
MKDIR_P = mkdir -p
NO_PHONOLOGY = 
NPM = 
ONMT_BUILD_VOCAB = 
ONMT_TRAIN = 
PACKAGE = giella-slh
PACKAGE_BUGREPORT = feedback@divvun.no
PACKAGE_NAME = Giella slh
PACKAGE_STRING = Giella slh 0.1.0
PACKAGE_TARNAME = giella-slh
PACKAGE_URL = http://divvun.no
PACKAGE_VERSION = 0.1.0
PATGEN = false
PATH_SEPARATOR = :
PERL = /opt/homebrew/bin/perl
PKG_CONFIG = /opt/homebrew/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/opt/homebrew/opt/libxml2/lib/pkgconfig:/opt/homebrew/opt/icu4c/lib/pkgconfig:
PRINTF = /usr/bin/printf
PYTHON = /Library/Frameworks/Python.framework/Versions/3.8/bin/python3
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.8
R = 
RSYNC = /usr/bin/rsync
SAXON = false
SAXONJAR = /Users/jackrueter/lib/saxon9he.jar
SED = /usr/bin/sed
SEE = 
SET_MAKE = 
SHELL = /bin/sh
SPELLERVERSION = 0.1.0
SPELLER_DESC_ENG = A spellchecker for Southern Puget Sound Salish, made by members of the language community, and by the Divvun and Giellatekno groups at UiT The Arctic University of Norway
SPELLER_DESC_NATIVE = TRANSLATE: A spellchecker for Southern Puget Sound Salish, made by members of the language community, and by the Divvun and Giellatekno groups at UiT The Arctic University of Norway
SPELLER_NAME_ENG = Southern Puget Sound Salish spellchecker
SPELLER_NAME_NATIVE = Autonym spellchecker
STRIP = 
TAR = /usr/bin/tar
TWOLC = false
UCONV = /opt/homebrew/opt/icu4c/bin/uconv
VERSION = 0.1.0
VISLCG3 = /usr/local/bin/vislcg3
VISLCG3_COMP = /usr/local/bin/cg-comp
VOIKKOGC = false
VOIKKOHYPHENATE = false
VOIKKOSPELL = false
VOIKKOVFSTC = false
WGET = /opt/homebrew/bin/wget
XFST = false
XZ = /opt/homebrew/bin/xz
ZIP = /usr/bin/zip
abs_builddir = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/tools/tts
abs_srcdir = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/tools/tts
abs_top_builddir = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh
abs_top_srcdir = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh
am__leading_dot = .
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = aarch64-apple-darwin23.4.0
build_alias = 
build_cpu = aarch64
build_os = darwin23.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gt_SHARED_common = /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/./../shared-mul
host = aarch64-apple-darwin23.4.0
host_alias = 
host_cpu = aarch64
host_os = darwin23.4.0
host_vendor = apple
htmldir = ${docdir}
ifGNUmake = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/jackrueter/Dropbox/Github/giellalt/lang-slh/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/giella-slh
pkgpythondir = ${pythondir}/giella-slh
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${PYTHON_EXEC_PREFIX}/lib/python3.8/site-packages
pythondir = ${PYTHON_PREFIX}/lib/python3.8/site-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = . test

####### Source file names: ########
# NB! If any of the filenames below are changed, then remember to also update
# the corresponding filename in `pipespec.xml.in`
GIELLA_ANL_VALENCY_SRC = 
GIELLA_ANL_WHSPACE_ANAL_SRC = analyser-gt-whitespace.regex
GIELLA_ANL_MWEDIS_SRC = mwe-dis.cg3
GIELLA_ANL_DISAMBIGUATOR_SRC = disambiguator.cg3
GIELLA_ANL_FUNCTIONS_SRC = functions.cg3
GIELLA_ANL_DEPENDENCY_SRC = dependency.cg3

# Tokeniser:
GIELLA_ANL_TOKENISER = tokeniser-disamb-gt-desc.pmhfst

# List transcriptor source files from src/transcriptions/ (without extension)
# that should NOT be included in the tts text processing (by default everything
# is included):
GIELLA_ANL_REMOVE_TRANSCRIPTORS = 

# If there are additional, language specific files used in the GC archive,
# specify here:
LOCAL_ANL_ZIP_FILES = 

# set this to the filename of the analyser archive:
GIELLA_TTS_ZDISTRO = $(GLANG2)-tts.zpipe

# Various text conversion fst's - normalisers/expanders and IPA:
GIELLA_ANL_IPA = txt2ipa.lookup.hfstol
GIELLA_ANL_IPA_RAW = txt2ipa.lookup.hfst

# List of transcriptors: all files in src/transcriptions/ matching the file name
# pattern:
# *2text.filtered.lookup.hfstol
# Makes it flexible and easily adaptable to the needs of each language.
# For additional flexibility, one can filter out files that should not be
# included, by specifying them in tools/tts/Makefile.am (without suffix).
FILTER_OUT_FILES = $(addsuffix %, $(GIELLA_ANL_REMOVE_TRANSCRIPTORS))
GIELLA_XSC_TRANSCIPTOR_LIST = $(basename $(notdir $(wildcard $(top_builddir)/src/fst/transcriptions/*2text.filtered.lookup.hfstol)))
GIELLA_XSC_TRANSCIPTOR_FILTERED_LIST = $(filter-out $(FILTER_OUT_FILES), $(GIELLA_XSC_TRANSCIPTOR_LIST))
GIELLA_XSC_TRANSCIPTORS = $(addsuffix .hfst, $(GIELLA_XSC_TRANSCIPTOR_FILTERED_LIST))
GIELLA_XSC_NORMALISER = transcriptor-gt-desc.hfstol
GIELLA_XSC_ANALYSER = analyser-gt-norm.hfstol
GIELLA_XSC_GENERATOR = generator-tts-gt-norm.hfstol

# Disamb and syntax analysis files, including whitespace analysis:
GIELLA_ANL_VALENCY = $(GIELLA_ANL_VALENCY_SRC:.cg3=.bin)
GIELLA_ANL_WHSPACE_ANAL = $(GIELLA_ANL_WHSPACE_ANAL_SRC:.regex=.hfst)
GIELLA_ANL_MWEDIS = $(GIELLA_ANL_MWEDIS_SRC:.cg3=.bin)
GIELLA_ANL_DISAMBIGUATOR = $(GIELLA_ANL_DISAMBIGUATOR_SRC:.cg3=.bin)
GIELLA_ANL_FUNCTIONS = $(GIELLA_ANL_FUNCTIONS_SRC:.cg3=.bin)
GIELLA_ANL_DEPENDENCY = $(GIELLA_ANL_DEPENDENCY_SRC:.cg3=.bin)
GIELLA_ANL_SEMSETS = $(GIELLA_ANL_SEMSETS_SRC:.cg3=.bin)

# Pipeline specification:
GIELLA_ANL_PIPESPEC = pipespec.xml

#! @var GIELLA_ANL_GRAMCHECKER_SRC source for rules of vislcg3 analyser
TTSPIPE_SRC_FILES = $(GIELLA_ANL_MWEDIS_SRC) \
			 $(GIELLA_ANL_DISAMBIGUATOR_SRC) \
			 $(GIELLA_ANL_WHSPACE_ANAL_SRC) \
			 $(GIELLA_ANL_SEMSETS_SRC) \
			 $(GIELLA_ANL_VALENCY)


#! @var INCLUDES need to be copied over before compiling main cg file
GIELLA_CG_INCLUDES = $(TTSPIPE_SRC_FILES)
EXTRA_DIST = $(TTSPIPE_SRC_FILES) \
		   $(GIELLA_ANL_PIPESPEC)


####### Automake targets: ########
#GIELLA_ANL_ZIPFILES = $(GIELLA_ANL_IPA)            \
#					$(GIELLA_XSC_NORMALISER)     \
#					$(GIELLA_XSC_ANALYSER)       \
#					$(GIELLA_XSC_GENERATOR)      \
#					$(GIELLA_ANL_TOKENISER)      \
#					$(GIELLA_ANL_VALENCY)        \
#					$(GIELLA_ANL_WHSPACE_ANAL)   \
#					$(GIELLA_ANL_MWEDIS)         \
#					$(GIELLA_ANL_DISAMBIGUATOR)  \
#					$(GIELLA_ANL_FUNCTIONS)      \
#					$(GIELLA_ANL_SEMSETS)      \
#					$(GIELLA_ANL_DEPENDENCY)     \
#					$(GIELLA_ANL_PIPESPEC)       \
#					$(LOCAL_ANL_ZIP_FILES)

#noinst_DATA = $(GIELLA_ANL_SPELLER)
#voikkosharedir = $(datadir)/giella/$(GLANG)/
#voikkoshare_DATA = $(GIELLA_TTS_ZDISTRO)

####### Build rules - locally and via include: ########
ZIPFLAGS = -j
HFST_FORMAT = --format=foma
#HFST_FORMAT = --format=openfst-log
#HFST_FORMAT = --format=openfst-tropical
#HFST_FORMAT = --format=sfst
HFST_OLFORMAT = --format=optimized-lookup-unweighted
#HFST_OLFORMAT = --format=optimized-lookup-weighted
#HFST_OLFORMAT = --format=optimized-lookup-weighted
#HFST_OLFORMAT = --format=optimized-lookup-unweighted

# hfst-compose:
AM_V_COMPOSE = $(AM_V_COMPOSE_$(V))
AM_V_COMPOSE_ = $(AM_V_COMPOSE_$(AM_DEFAULT_VERBOSITY))
AM_V_COMPOSE_0 = @echo "  HCOMPOSE $@";

# hfst-concatenate:
AM_V_HCONCAT = $(AM_V_HCONCAT_$(V))
AM_V_HCONCAT_ = $(AM_V_HCONCAT_$(AM_DEFAULT_VERBOSITY))
AM_V_HCONCAT_0 = @echo "  HCONCAT  $@";

# hfst-conjunct /
# hfst-intersect:
AM_V_CONJCT = $(AM_V_CONJCT_$(V))
AM_V_CONJCT_ = $(AM_V_CONJCT_$(AM_DEFAULT_VERBOSITY))
AM_V_CONJCT_0 = @echo "  HCONJCT  $@";

# hfst-fst2fst:
AM_V_FST2FST = $(AM_V_FST2FST_$(V))
AM_V_FST2FST_ = $(AM_V_FST2FST_$(AM_DEFAULT_VERBOSITY))
AM_V_FST2FST_0 = @echo "  HFST2FST $@";

# hfst-minimize
AM_V_HMINIM = $(AM_V_HMINIM_$(V))
AM_V_HMINIM_ = $(AM_V_HMINIM_$(AM_DEFAULT_VERBOSITY))
AM_V_HMINIM_0 = @echo "  HMINIM   $@";

# hfst-fst2txt:
AM_V_FST2TXT = $(AM_V_FST2TXT_$(V))
AM_V_FST2TXT_ = $(AM_V_FST2TXT_$(AM_DEFAULT_VERBOSITY))
AM_V_FST2TXT_0 = @echo "  HFST2TXT $@";

# hfst-foma:
AM_V_HFOMA = $(AM_V_HFOMA_$(V))
AM_V_HFOMA_ = $(AM_V_HFOMA_$(AM_DEFAULT_VERBOSITY))
AM_V_HFOMA_0 = @echo "  HFOMA    $@";

# hfst-optimized-lookup:
AM_V_HFSTOL = $(AM_V_HFSTOL_$(V))
AM_V_HFSTOL_ = $(AM_V_HFSTOL_$(AM_DEFAULT_VERBOSITY))
AM_V_HFSTOL_0 = @echo "  HFSTOL   $@";

# hfst-lexc:
AM_V_HLEXC = $(AM_V_HLEXC_$(V))
AM_V_HLEXC_ = $(AM_V_HLEXC_$(AM_DEFAULT_VERBOSITY))
AM_V_HLEXC_0 = @echo "  HLEXC    $@";

# hfst-split:
AM_V_HSPLIT = $(AM_V_HSPLIT_$(V))
AM_V_HSPLIT_ = $(AM_V_HSPLIT_$(AM_DEFAULT_VERBOSITY))
AM_V_HSPLIT_0 = @echo "  HSPLIT   $@";

# hfst-substitute:
AM_V_HSUBST = $(AM_V_HSUBST_$(V))
AM_V_HSUBST_ = $(AM_V_HSUBST_$(AM_DEFAULT_VERBOSITY))
AM_V_HSUBST_0 = @echo "  HSUBST   $@";

# hfst-twolc:
AM_V_HTWOLC = $(AM_V_HTWOLC_$(V))
AM_V_HTWOLC_ = $(AM_V_HTWOLC_$(AM_DEFAULT_VERBOSITY))
AM_V_HTWOLC_0 = @echo "  HTWOLC   $@";

# hfst-xfst:
AM_V_HXFST = $(AM_V_HXFST_$(V))
AM_V_HXFST_ = $(AM_V_HXFST_$(AM_DEFAULT_VERBOSITY))
AM_V_HXFST_0 = @echo "  HXFST    $@";

# hfst-compose-intersect:
AM_V_INTRSCT = $(AM_V_INTRSCT_$(V))
AM_V_INTRSCT_ = $(AM_V_INTRSCT_$(AM_DEFAULT_VERBOSITY))
AM_V_INTRSCT_0 = @echo "  HINTRSCT $@";

# hfst-invert:
AM_V_INVERT = $(AM_V_INVERT_$(V))
AM_V_INVERT_ = $(AM_V_INVERT_$(AM_DEFAULT_VERBOSITY))
AM_V_INVERT_0 = @echo "  HINVERT  $@";

# hfst-pmatch2fst
AM_V_PM2FST = $(AM_V_PM2FST_$(V))
AM_V_PM2FST_ = $(AM_V_PM2FST_$(AM_DEFAULT_VERBOSITY))
AM_V_PM2FST_0 = @echo "  HPM2FST  $@";

# hfst-project:
AM_V_PROJECT = $(AM_V_PROJECT_$(V))
AM_V_PROJECT_ = $(AM_V_PROJECT_$(AM_DEFAULT_VERBOSITY))
AM_V_PROJECT_0 = @echo "  HPROJECT $@";

# hfst-prune-alphabet
AM_V_HPRUNE = $(AM_V_HPRUNE_$(V))
AM_V_HPRUNE_ = $(AM_V_HPRUNE_$(AM_DEFAULT_VERBOSITY))
AM_V_HPRUNE_0 = @echo "  HPRUNE   $@";

# hfst-reverse
AM_V_REVERSE = $(AM_V_REVERSE_$(V))
AM_V_REVERSE_ = $(AM_V_REVERSE_$(AM_DEFAULT_VERBOSITY))
AM_V_REVERSE_0 = @echo "  HREVERSE $@";

# hfst-reweight:
AM_V_REWEIGHT = $(AM_V_REWEIGHT_$(V))
AM_V_REWEIGHT_ = $(AM_V_REWEIGHT_$(AM_DEFAULT_VERBOSITY))
AM_V_REWEIGHT_0 = @echo "  HREWGHT  $@";

# hfst-regexp2fst:
AM_V_RGX2FST = $(AM_V_RGX2FST_$(V))
AM_V_RGX2FST_ = $(AM_V_RGX2FST_$(AM_DEFAULT_VERBOSITY))
AM_V_RGX2FST_0 = @echo "  HRGX2FST $@";

# hfst-repeat
AM_V_REPEAT = $(AM_V_REPEAT_$(V))
AM_V_REPEAT_ = $(AM_V_REPEAT_$(AM_DEFAULT_VERBOSITY))
AM_V_REPEAT_0 = @echo "  HREPEAT  $@";

# hfst-strings2fst:
AM_V_STR2FST = $(AM_V_STR2FST_$(V))
AM_V_STR2FST_ = $(AM_V_STR2FST_$(AM_DEFAULT_VERBOSITY))
AM_V_STR2FST_0 = @echo "  HSTR2FST $@";

# hfst-txt2fst:
AM_V_TXT2FST = $(AM_V_TXT2FST_$(V))
AM_V_TXT2FST_ = $(AM_V_TXT2FST_$(AM_DEFAULT_VERBOSITY))
AM_V_TXT2FST_0 = @echo "  HTXT2FST $@";

# hfst-union / hfst-disjunct:
AM_V_UNION = $(AM_V_UNION_$(V))
AM_V_UNION_ = $(AM_V_UNION_$(AM_DEFAULT_VERBOSITY))
AM_V_UNION_0 = @echo "  HUNION   $@";

#### LexD (Apertium)
AM_V_LEXD = $(AM_V_LEXD_$(V))
AM_V_LEXD_ = $(AM_V_LEXD_$(AM_DEFAULT_VERBOSITY))
AM_V_LEXD_0 = @echo "  LEXD     $@";

#### Foma
AM_V_FOMA = $(AM_V_FOMA_$(V))
AM_V_FOMA_ = $(AM_V_FOMA_$(AM_DEFAULT_VERBOSITY))
AM_V_FOMA_0 = @echo "  FOMA     $@";

#### Xerox tools
AM_V_TWOLC = $(AM_V_TWOLC_$(V))
AM_V_TWOLC_ = $(AM_V_TWOLC_$(AM_DEFAULT_VERBOSITY))
AM_V_TWOLC_0 = @echo "  TWOLC    $@";
AM_V_LEXC = $(AM_V_LEXC_$(V))
AM_V_LEXC_ = $(AM_V_LEXC_$(AM_DEFAULT_VERBOSITY))
AM_V_LEXC_0 = @echo "  LEXC     $@";
AM_V_XFST = $(AM_V_XFST_$(V))
AM_V_XFST_ = $(AM_V_XFST_$(AM_DEFAULT_VERBOSITY))
AM_V_XFST_0 = @echo "  XFST     $@";

#### VislCG3
AM_V_CGCOMP = $(AM_V_CGCOMP_$(V))
AM_V_CGCOMP_ = $(AM_V_CGCOMP_$(AM_DEFAULT_VERBOSITY))
AM_V_CGCOMP_0 = @echo "  CG3COMP  $@";

#### Other tools
AM_V_CP = $(AM_V_CP_$(V))
AM_V_CP_ = $(AM_V_CP_$(AM_DEFAULT_VERBOSITY))
AM_V_CP_0 = @echo "  CP       $@";
AM_V_MV = $(AM_V_MV_$(V))
AM_V_MV_ = $(AM_V_MV_$(AM_DEFAULT_VERBOSITY))
AM_V_MV_0 = @echo "  MV       $@";
AM_V_GZIP = $(AM_V_GZIP_$(V))
AM_V_GZIP_ = $(AM_V_GZIP_$(AM_DEFAULT_VERBOSITY))
AM_V_GZIP_0 = @echo "  GZIP     $@";
AM_V_ZIP = $(AM_V_ZIP_$(V))
AM_V_ZIP_ = $(AM_V_ZIP_$(AM_DEFAULT_VERBOSITY))
AM_V_ZIP_0 = @echo "  ZIP      $@";
AM_V_SAXON = $(AM_V_SAXON_$(V))
AM_V_SAXON_ = $(AM_V_SAXON_$(AM_DEFAULT_VERBOSITY))
AM_V_SAXON_0 = @echo "  SAXON    $@";
AM_V_XSLPROC = $(AM_V_XSLPROC_$(V))
AM_V_XSLPROC_ = $(AM_V_XSLPROC_$(AM_DEFAULT_VERBOSITY))
AM_V_XSLPROC_0 = @echo "  XSLPROC  $@";
AM_V_AWK = $(AM_V_AWK_$(V))
AM_V_AWK_ = $(AM_V_AWK_$(AM_DEFAULT_VERBOSITY))
AM_V_AWK_0 = @echo "  AWK      $@";
AM_V_SED = $(AM_V_SED_$(V))
AM_V_SED_ = $(AM_V_SED_$(AM_DEFAULT_VERBOSITY))
AM_V_SED_0 = @echo "  SED      $@";
AM_V_FORREST = $(AM_V_FORREST_$(V))
AM_V_FORREST_ = $(AM_V_FORREST_$(AM_DEFAULT_VERBOSITY))
AM_V_FORREST_0 = @echo "  FORREST  $@";

# Let the verbosity of some command line tools follow the automake verbosity.
# VERBOSITY       = be quiet if V=0, unspecified otherwise
# MORE_VERBOSITY  = be quiet if V=0, be verbose otherwise
VERBOSITY = $(if $(strip $(filter-out false,$(AM_V_P))), ,-q)
MORE_VERBOSITY = $(if $(strip $(filter-out false,$(AM_V_P))),-v,-q)
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/../giella-core/am-shared/tools-tts-dir-include.am $(top_srcdir)/../giella-core/am-shared/hfst-format-include.am $(top_srcdir)/../giella-core/am-shared/vislcg3-include.am $(top_srcdir)/../giella-core/am-shared/silent_build-include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tools/tts/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tools/tts/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/../giella-core/am-shared/tools-tts-dir-include.am $(top_srcdir)/../giella-core/am-shared/hfst-format-include.am $(top_srcdir)/../giella-core/am-shared/vislcg3-include.am $(top_srcdir)/../giella-core/am-shared/silent_build-include.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
pipespec.xml: $(top_builddir)/config.status $(srcdir)/pipespec.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-voikkoshareDATA: $(voikkoshare_DATA)
	@$(NORMAL_INSTALL)
	@list='$(voikkoshare_DATA)'; test -n "$(voikkosharedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(voikkosharedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(voikkosharedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(voikkosharedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(voikkosharedir)" || exit $$?; \
	done

uninstall-voikkoshareDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(voikkoshare_DATA)'; test -n "$(voikkosharedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(voikkosharedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(voikkosharedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-voikkoshareDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-voikkoshareDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-local cscopelist-am ctags \
	ctags-am distclean distclean-generic distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-voikkoshareDATA installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-voikkoshareDATA

.PRECIOUS: Makefile


# Copy tokeniser:
$(GIELLA_ANL_TOKENISER): \
			$(top_builddir)/tools/tokenisers/$(GIELLA_ANL_TOKENISER)
	$(AM_V_CP)cp -f $< $@

# Compile the IPA conversion fst:
$(GIELLA_ANL_IPA): \
			$(top_builddir)/src/fst/phonetics/$(GIELLA_ANL_IPA_RAW)
	$(AM_V_FST2FST)$(HFST_FST2FST) -f olw -i $< -o $@

# Compile the various transcriptor fst's:
transcriptor-%.hfst: \
			$(top_builddir)/src/fst/transcriptions/transcriptor-%.hfstol
	$(AM_V_FST2FST)$(HFST_FST2FST) $(HFST_FORMAT) -i $< -o $@

# Compile the normaliser fst by looping over all individual transcriptors,
# and unionise them one at a time with the result of the preceding step.
# The first in the list is used as the base. Finally, make all final full
# stops optional, so that both 'dr.' and 'dr' will return 'doktor'.
$(GIELLA_XSC_NORMALISER).tmp: $(GIELLA_XSC_TRANSCIPTORS)
	$(AM_V_GEN)cp -f $< $@
	$(AM_V_UNION)for f in $(filter-out $<, $^); do \
		$(HFST_DISJUNCT) -1 $@ -2 $$f -o $@.tmp; mv -f $@.tmp $@ ; \
		done

$(GIELLA_XSC_NORMALISER): $(top_builddir)/src/fst/filters/make-optional-final_full_stops.hfst \
                          $(GIELLA_XSC_NORMALISER).tmp
	$(AM_V_FST2FST)$(HFST_COMPOSE) -1 $< -2 $@.tmp \
		| $(HFST_MINIMIZE) \
		| $(HFST_FST2FST) -f olw -o $@
	$(AM_V_GEN)rm -f $@.tmp

# Copy analyser and generator for divvun-normaliser:
# Copy mwe-dis:
$(GIELLA_XSC_ANALYSER) \
$(GIELLA_XSC_GENERATOR): \
%.hfstol: $(top_builddir)/src/fst/%.hfstol
	$(AM_V_CP)cp -f $< $@

# Compile the whitespace analyser:
$(GIELLA_ANL_WHSPACE_ANAL): $(GIELLA_ANL_WHSPACE_ANAL_SRC)
	$(AM_V_RGX2FST)$(HFST_REGEXP2FST) --disjunct -i $< \
		| $(HFST_FST2FST) -O -o $@

# Copy mwe-dis:
$(GIELLA_ANL_MWEDIS_SRC): \
		$(top_srcdir)/tools/tokenisers/$(GIELLA_ANL_MWEDIS_SRC)
	$(AM_V_CP)cp -f $< $@

# cg3 files from common sources:
$(GIELLA_ANL_VALENCY_SRC) \
$(GIELLA_ANL_FUNCTIONS_SRC) \
$(GIELLA_ANL_DEPENDENCY_SRC): \
%.cg3: $(top_builddir)/src/cg3/%.cg3
	$(AM_V_CP)cp -f $< $@

$(GIELLA_ANL_SEMSETS_SRC): $(top_srcdir)/src/cg3/$(GIELLA_ANL_SEMSETS_SRC)
	$(AM_V_CP)cp -f $< $@

# Disambiguator:
$(GIELLA_ANL_DISAMBIGUATOR_SRC): \
%.cg3: $(top_srcdir)/src/cg3/%.cg3
	$(AM_V_CP)cp -f $< $@

# Finally build the .zglt file:
$(GIELLA_TTS_ZDISTRO): $(GIELLA_ANL_ZIPFILES)
	$(AM_V_at)rm -f $@
	$(AM_V_ZIP)$(ZIP) $(ZIPFLAGS) $(MORE_VERBOSITY) $@ $^

# Additional developer tools:
dev: modes/$(GLANG)normalise.mode schemas.xml

modes/%.mode: pipespec.xml
	$(AM_V_at)$(MKDIR_P) modes
	$(AM_V_GEN)divvun-gen-sh -d modes $<

schemas.xml:
	divvun-gen-xmlschemas >$@

### Clean target:
clean-local:
	-rm -f *.bin schemas.xml *.zcheck *.hfst *.hfstol *.zip *.zhfst generated-*
	-rm -f $(GIELLA_ANL_ZIPFILES)
	-rm -rf modes

####### Build rules: ########
%.bin: %.cg3 $(GIELLA_CG_INCLUDES)
	$(AM_V_CGCOMP)"$(VISLCG3_COMP)" $< $@

%.bin: $(srcdir)/%.cg3 $(GIELLA_CG_INCLUDES)
	$(AM_V_CGCOMP)"$(VISLCG3_COMP)" $< $@

.generated/%.bin: %.cg3 $(GIELLA_CG_INCLUDES) $(GENDIR)
	$(AM_V_CGCOMP)"$(VISLCG3_COMP)" $< $@

# vim: set ft=automake:

### Include the following

# vim: set ft=automake:

#### BEGIN: Local build targets: ####

#### END: Local build targets:   ####

#### Do NOT edit below here: ####

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
